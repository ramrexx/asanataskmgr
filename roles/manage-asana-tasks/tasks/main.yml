- name: Check to see if Asana task exists
  uri:
    url: "{{ asana_api }}/projects/{{asana_project_id}}/tasks"
    headers:
      Content-Type: application/json
      Authorization: "{{asana_token}}"
    method: GET
    body_format: json
    validate_certs: "{{ validate_certs }}"
    status_code: 200
  register: project_tasks

# - name: Count number of tasks found
#   debug:
#     var: project_tasks.json.data|count

- name: Set the project_gid
  vars:
    task_name: "{{customer_name}}|{{opp_number}}|opp_name"
    nquery: "[? name==`{{task_name}}`]"
  set_fact:
    task_gid: "{{item.gid}}"
  with_items: "{{project_tasks.json.data|json_query(nquery)}}"

- name: test
  debug:
    var: task_gid

- name: determine New versus Renewal
  set_fact:
    asana_task_template: "{{netnew}}"
  when: opp_record_type == 'NA Sales Opportunity'

- name: Clone template task
  uri:
    url: "{{ asana_api }}/tasks/{{asana_task_template}}/duplicate"
    headers:
      Authorization: "{{asana_token}}"
    method: POST
    body:
      data:
        include:
        - attachments
        - dependencies
        - notes
        - assignee
        - parent
        - projects
        - subtasks
        - notes
        - tags
        name: "{{customer_name}}|{{opp_number}}|{{opp_name}}"
    body_format: json
    validate_certs: "{{ validate_certs }}"
    status_code: 201
  register: cloned_task

- name: cloned_task
  debug:
    var: cloned_task.json.data['new_task'].gid
